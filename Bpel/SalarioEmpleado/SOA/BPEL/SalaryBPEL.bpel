<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Sat May 21 12:02:18 CDT 2016
  Author:  NeryS
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="SalaryBPEL"
               targetNamespace="http://erp.oracle.cenam/Bpel/SalarioEmpleado/SalaryBPEL"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://erp.oracle.cenam/Bpel/SalarioEmpleado/SalaryBPEL"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:ui="http://xmlns.oracle.com/soa/designer"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:ns1="http://erp.oracle.cenam"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/file/Bpel/SalarioEmpleado/WriteEmpleado"
         xmlns:ns3="http://erp_oracle.cenam"
         xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/Bpel/SalarioEmpleado/AdapterDerby"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:ns5="http://xmlns.oracle.com/pcbpel/adapter/db/top/AdapterDerby">

    <import ui:processWSDL="true" namespace="http://erp.oracle.cenam/Bpel/SalarioEmpleado/SalaryBPEL" location="../WSDLs/SalaryBPEL.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="salary_client" partnerLinkType="client:SalaryBPEL" myRole="SalaryBPELProvider"/>
    <partnerLink name="WriteEmpleado" partnerLinkType="ns2:Write_plt" partnerRole="Write_role"/>
    <partnerLink name="AdapterDerby" partnerLinkType="ns4:AdapterDerby_plt" partnerRole="AdapterDerby_role"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:SalaryBPELRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:SalaryBPELResponseMessage"/>
    <variable name="LengthSalarios" type="xsd:int"/>
    <variable name="LengthImpuestos" type="xsd:int"/>
    <variable name="LengthDeduciones" type="xsd:int"/>
    <variable name="cont" type="xsd:int"/>
    <variable name="temp" type="xsd:double"/>
    <variable name="SalarioTotal" type="xsd:double"/>
    <variable name="ImpuestoTotal" type="xsd:double"/>
    <variable name="DeduccionTotal" type="xsd:double"/>
    <variable name="PagoTotal" type="xsd:double"/>
    <variable name="EmployeeWriteInputVariable" messageType="ns2:Write_msg"/>
    <variable name="insert_InputVariable" messageType="ns4:SalariosCollection_msg"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in SalaryBPEL.wsdl) --><receive name="receiveInput" partnerLink="salary_client" portType="client:SalaryBPEL" operation="GetSalaryEmployee" variable="inputVariable" createInstance="yes"/>
    <assign name="InitVar">
      <copy>
        <from>ora:countNodes('inputVariable','payload','salarios')</from>
        <to>$LengthSalarios</to>
      </copy>
      <copy>
        <from>0</from>
        <to>$ImpuestoTotal</to>
      </copy>
      <copy>
        <from>0</from>
        <to>$DeduccionTotal</to>
      </copy>
      <copy>
        <from>0</from>
        <to>$temp</to>
      </copy>
      <copy>
        <from>0</from>
        <to>$SalarioTotal</to>
      </copy>
      <copy>
        <from>ora:countNodes('inputVariable','payload','impuestos')</from>
        <to>$LengthImpuestos</to>
      </copy>
      <copy>
        <from>ora:countNodes('inputVariable','payload','deduccion')</from>
        <to>$LengthDeduciones</to>
      </copy>
      <copy>
        <from>1</from>
        <to>$cont</to>
      </copy>
    </assign>
    <while name="While_salarios">
      <condition>$cont &lt;= $LengthSalarios</condition>
      <sequence name="GetSalarioTotal">
        <assign name="Temp">
          <copy>
            <from>ora:getNodeValue(bpws:getVariableData('inputVariable','payload','salarios[$cont]'))</from>
            <to>$temp</to>
          </copy>
        </assign>
        <assign name="Suma">
          <copy>
            <from>bpws:getVariableData('SalarioTotal')+bpws:getVariableData('temp')</from>
            <to>$SalarioTotal</to>
          </copy>
        </assign>
        <assign name="IncrementarCount">
          <copy>
            <from>bpws:getVariableData('cont')+1</from>
            <to>$cont</to>
          </copy>
        </assign>
      </sequence>
    </while>
    <assign name="ClearVar">
      <copy>
        <from>0</from>
        <to>$temp</to>
      </copy>
      <copy>
        <from>1</from>
        <to>$cont</to>
      </copy>
    </assign>
    <while name="While_Impuestos">
      <condition>bpws:getVariableData('cont') &lt;= bpws:getVariableData('LengthImpuestos')</condition>
      <sequence name="GetImpuestoTotal">
        <assign name="TempImpusto">
          <copy>
            <from>ora:getNodeValue(bpws:getVariableData('inputVariable','payload','impuestos[$cont]'))</from>
            <to>$temp</to>
          </copy>
        </assign>
        <assign name="SumaImpuestos">
          <copy>
            <from>bpws:getVariableData('ImpuestoTotal')+bpws:getVariableData('temp')</from>
            <to>$ImpuestoTotal</to>
          </copy>
        </assign>
        <assign name="IncrementarCout">
          <copy>
            <from>bpws:getVariableData('cont')+1</from>
            <to>$cont</to>
          </copy>
        </assign>
      </sequence>
    </while>
    <assign name="ClearVar" xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
      
      
   <copy>
         <from>0</from>
         <to>$temp</to>
      </copy><copy>
         <from>1</from>
         <to>$cont</to>
      </copy></assign>
    <while name="While_Deducciones">
      <condition>bpws:getVariableData('cont') &lt;= bpws:getVariableData('LengthDeduciones')</condition>
      <sequence name="GetDeduccionTotal">
        <assign name="TempDeducciones">
          <copy>
            <from>ora:getNodeValue(bpws:getVariableData('inputVariable','payload','deduccion[$cont]'))</from>
            <to>$temp</to>
          </copy>
        </assign>
        <assign name="SumaDeducciones">
          <copy>
            <from>bpws:getVariableData('DeduccionTotal')+bpws:getVariableData('temp')</from>
            <to>$DeduccionTotal</to>
          </copy>
        </assign>
        <assign name="IncrementarCount">
          <copy>
            <from>bpws:getVariableData('cont')+1</from>
            <to>$cont</to>
          </copy>
        </assign>
      </sequence>
    </while>
    <assign name="ResponseBPEL">
      <copy>
        <from>$inputVariable.payload/noEmpleado</from>
        <to>$outputVariable.payload/noEmpleado</to>
      </copy>
      <copy>
        <from>$SalarioTotal</from>
        <to>$outputVariable.payload/salarioTotal</to>
      </copy>
      <copy>
        <from>$ImpuestoTotal</from>
        <to>$outputVariable.payload/impuestoTotal</to>
      </copy>
      <copy>
        <from>$DeduccionTotal</from>
        <to>$outputVariable.payload/deduccionTotal</to>
      </copy>
      <copy>
        <from>($SalarioTotal - $ImpuestoTotal) + $DeduccionTotal</from>
        <to>$outputVariable.payload/pagoTotal</to>
      </copy>
    </assign>
    <assign name="SalidaFile">
      <copy>
        <from>$inputVariable.payload/noEmpleado</from>
        <to>$EmployeeWriteInputVariable.body/ns3:Empleado/ns3:noEmpleado</to>
      </copy>
      <copy>
        <from>$SalarioTotal</from>
        <to>$EmployeeWriteInputVariable.body/ns3:Empleado/ns3:salarioTotal</to>
      </copy>
      <copy>
        <from>$ImpuestoTotal</from>
        <to>$EmployeeWriteInputVariable.body/ns3:Empleado/ns3:impuestoTotal</to>
      </copy>
      <copy>
        <from>$DeduccionTotal</from>
        <to>$EmployeeWriteInputVariable.body/ns3:Empleado/ns3:deduccionTotal</to>
      </copy>
      <copy>
        <from>($SalarioTotal - $ImpuestoTotal) + $DeduccionTotal</from>
        <to>$EmployeeWriteInputVariable.body/ns3:Empleado/ns3:pagoTotal</to>
      </copy>
    </assign>
    <invoke name="WriteFile_Employee" bpelx:invokeAsDetail="no" partnerLink="WriteEmpleado" portType="ns2:Write_ptt"
            operation="Write" inputVariable="EmployeeWriteInputVariable"/>
    <assign name="PersistenciaBd">
      <copy>
        <from>$SalarioTotal</from>
        <to>$insert_InputVariable.SalariosCollection/ns5:Salarios/ns5:salariototal</to>
      </copy>
      <copy>
        <from>($SalarioTotal - $ImpuestoTotal) + $DeduccionTotal</from>
        <to>$insert_InputVariable.SalariosCollection/ns5:Salarios/ns5:pagototal</to>
      </copy>
      <copy>
        <from>$ImpuestoTotal</from>
        <to>$insert_InputVariable.SalariosCollection/ns5:Salarios/ns5:impuestototal</to>
      </copy>
      <copy>
        <from>$DeduccionTotal</from>
        <to>$insert_InputVariable.SalariosCollection/ns5:Salarios/ns5:deducciontotal</to>
      </copy>
      <copy>
        <from>$inputVariable.payload/noEmpleado</from>
        <to>$insert_InputVariable.SalariosCollection/ns5:Salarios/ns5:noempleado</to>
      </copy>
    </assign>
    <invoke name="InvokeDerby" partnerLink="AdapterDerby" portType="ns4:AdapterDerby_ptt"
            operation="insert" inputVariable="insert_InputVariable" bpelx:invokeAsDetail="no"/>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="salary_client" portType="client:SalaryBPEL" operation="GetSalaryEmployee" variable="outputVariable"/>
  </sequence>
</process>